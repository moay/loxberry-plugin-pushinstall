#!/usr/bin/env bash

SOURCE="${BASH_SOURCE[0]}"
while [ -h "$SOURCE" ]; do # resolve $SOURCE until the file is no longer a symlink
  DIR="$( cd -P "$( dirname "$SOURCE" )" >/dev/null 2>&1 && pwd )"
  SOURCE="$(readlink "$SOURCE")"
  [[ $SOURCE != /* ]] && SOURCE="$DIR/$SOURCE" # if $SOURCE was a relative symlink, we need to resolve it relative to the path where the symlink file was located
done
SCRIPTDIR="$( cd -P "$( dirname "$SOURCE" )" >/dev/null 2>&1 && pwd )"

source $SCRIPTDIR/../lib/shflags

###########
# Parsing parameters
###########

# parameter definition
DEFINE_boolean 'skip_connection' false 'skips asking for your connection details if you have already entered them and they could be stored' 's'
DEFINE_boolean 'clear_stored_connection' false 'clears the stored connection details' 'c'

# parse the command-line parameters
FLAGS "$@" || exit $?
eval set -- "${FLAGS_ARGV}"


###########
# Some preparations
###########

echo Let\'s add your local ssh key on your LoxBerry.

source $SCRIPTDIR/../lib/loxberry-connection-details


###########
# Prepare ssh certificate
###########

if [ ! -f ~/.ssh/loxberry-pushinstall ]; then
  echo Generating new certificate.
  ssh-keygen -f ~/.ssh/loxberry-pushinstall -t rsa -b 4096
fi

if [ ! -f ~/.ssh/loxberry-pushinstall ]; then
  echo Something went wrong. There is no certificate file in ~/.ssh/loxberry-pushinstall. Try to create one yourself and run the command yourself.
  exit 1
fi

###########
# Copy and install ssh certificate
###########

echo Copying certificate to loxberry
ssh-copy-id -i ~/.ssh/loxberry-pushinstall $LOXBERRY_USERNAME@$LOXBERRY_IP

echo Adding certificate to local ssh configuration
cat <<EOT >> ~/.ssh/config


Host $LOXBERRY_IP
    User $LOXBERRY_USERNAME
    IdentityFile ~/.ssh/loxberry-pushinstall
EOT

echo
echo Done. \\o/
echo Try to login using ssh, you should be ready to go without any password request.
